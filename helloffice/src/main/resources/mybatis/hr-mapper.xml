<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="hr">
	<!-- 팀리스트 사원 보여주기 -->
	<select id="getTeamList" resultType="memberDto">
		SELECT 
			 EMP_NO
			,EMP_NAME
			,DEP_NAME
			,DEP_NO
			,EMP_RANK
			,EMP_POSITION
			,PHONE
		FROM HR
		WHERE RESIGN_YN = 'N'
		ORDER BY EMP_NO DESC
	</select>
	
	<!-- 부서 리스트 보여주기 -->
	<select id="getDeptList" resultType="deptDto">
		SELECT *
		FROM DEPARTMENT
		WHERE DEP_DEL = 'N'
        ORDER BY DEP_NAME
	</select>
	
	<!-- 부서 중복 테스트 -->
	<select id="cntDepName" resultType="int">
		SELECT COUNT(*) 
		FROM DEPARTMENT
		WHERE DEP_NAME = #{depName} and DEP_DEL = 'N'
	</select>
	
	<!-- 부서 추가 -->
	<insert id="insertDept" parameterType="deptDto">
		INSERT INTO 
		DEPARTMENT (
					DEP_NO, 
					DEP_NAME
		) VALUES (
					SEQ_DEPARTMENT_DEP_NO.nextval, 
					#{depName}
		)
	</insert>
	
	<!-- 부서 수정 -->
	<update id="updDeptName">
		UPDATE DEPARTMENT
		SET DEP_NAME = #{depChange}
		WHERE DEP_NAME = #{depName}
	</update>
	
	<!-- 부서 삭제 -->
	<update id="delDeptName">
		UPDATE DEPARTMENT
		SET DEP_DEL = 'Y'
		WHERE DEP_NAME = #{depName}
	</update>
	
	<!-- teamList 화면에 부서별 사원리스트 보여주기 -->
	<select id="getMemberListByDept" resultType="memberDto">
		SELECT 
			EMP_NO,
			EMP_NAME,
			DEP_NO,
			DEP_NAME,
			EMP_RANK,
			EMP_POSITION,
			PHONE
		FROM HR
		WHERE DEP_NAME = #{deptName}
		AND RESIGN_YN = 'N'
		ORDER BY EMP_NO DESC
	</select>
	
	<!-- 내 팀리스트 가져오기 -->
	<select id="getMyTeamList" resultType="memberDto">
		SELECT 
			EMP_NO,
			EMP_NAME,
			DEP_NO,
			DEP_NAME,
			EMP_RANK,
			EMP_POSITION,
			PHONE
		FROM HR
		WHERE RESIGN_YN = 'N'
		AND DEP_NAME = #{depName}
	</select>
	
	<!-- empNo 로 사원정보 전부 불러오기 -->
	<select id="getMemberInfoByEmpNo" resultType="allDto">
		SELECT * 
		FROM HR H LEFT JOIN CAREER C
		                ON H.EMP_NO = C.EMP_NO
		          LEFT JOIN ACADEMIC A
		                ON A.EMP_NO = A.EMP_NO
		          LEFT JOIN INSANOTE I
		                ON C.EMP_NO = I.EMP_NO
		WHERE H.EMP_NO = #{empNo}
	</select>
	
	<!-- 사원리스트 검색기능 -->
	<select id="getListBySearch" parameterType="memberDto" resultType="memberDto">
		SELECT 
			EMP_NO,
			EMP_NAME,
			DEP_NO,
			DEP_NAME,
			EMP_RANK,
			EMP_POSITION,
			PHONE
		FROM HR
		WHERE RESIGN_YN ='N'
		<if test='keyword != null and keyword neq ""'>
		AND EMP_NAME LIKE '%' || #{keyword} || '%'
		OR EMP_RANK LIKE '%' || #{keyword} || '%'
		OR EMP_POSITION LIKE '%' || #{keyword} || '%'
		OR PHONE LIKE '%' || #{keyword} || '%'
		</if>
		ORDER BY EMP_NO DESC
	</select>
	
	<!-- 인사정보 페이지 불러오기 -->
	<select id="getInsaPageInfo" resultType="memberDto">
		SELECT
			EMP_NO,
			EMP_NAME,
			DEP_NAME, 
			EMP_RANK, 
			EMP_POSITION, 
			ENTRY_DATE
		FROM HR WHERE EMP_NO = #{empNo}
	</select>
	
	
	<!-- 인사정보 페이지 수정하기  -->
	<update id="editInsaPage" parameterType="memberDto">
		UPDATE HR
		SET
			 DEP_NAME = #{depName}
			,EMP_RANK = #{empRank}
			,EMP_POSITION = #{empPosition}
			,ENTRY_DATE = #{entryDate}
		WHERE EMP_NO = #{empNo}
	</update>
	
	<!-- 정보 업데이트 후에 다시 불러오기 -->
	<select id="getMember" resultType="memberDto">
		SELECT 
			ADMIN_LEVEL,
			EMP_NO,
			EMP_NAME,
			DEP_NAME, 
			EMP_RANK, 
			EMP_POSITION, 
			ENTRY_DATE,
			EMAIL,
			EMP_INFO,
			PHONE,
			RESI_NO,
			ADDRESS,
			BANK,
			B_ACCOUNT
		FROM HR WHERE EMP_NO = #{empNo}
	</select>
	
	
	<!-- 기본정보 페이지 불러오기 -->
	<select id="getBasicPageInfo" resultType="memberDto">
		SELECT
			EMP_NO,
			EMP_NAME,
			EMAIL,
			EMP_INFO,
			PHONE,
			RESI_NO,
			ADDRESS,
			BANK,
			B_ACCOUNT
		FROM HR WHERE EMP_NO = #{empNo}
	</select>
	
	<!-- 기본정보 페이지 수정하기 -->
	<update id="editBasicPage" parameterType="memberDto">
		UPDATE HR
		SET
			 EMAIL = #{email}
			,EMP_NAME = #{empName}
			,EMP_INFO = #{empInfo}
			,PHONE = #{phone}
			,RESI_NO = #{resiNo}
			,ADDRESS = #{address}
			,BANK = #{bank}
			,B_ACCOUNT = #{bAccount}
		WHERE EMP_NO = #{empNo}
	</update>
	
	<select id="getCareerInfo" resultType="career">
		SELECT *
		FROM CAREER
		WHERE EMP_NO = #{empNo}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- <resultMap type="memberDto" id="memberFromDept">
		<id column="EMP_NO" property="empNo"/>
		<result column="EMP_NAME" property="empName"/>
		<result column="EMP_POSITION" property="empPosition"/>
		<result column="PHONE" property="phone"/>
		<result column="DEP_NO" property="depNo"/>
		<result column="DEP_NAME" property="depName"/>
	</resultMap> -->
	
	
</mapper>
